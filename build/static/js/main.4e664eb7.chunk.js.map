{"version":3,"sources":["../node_modules/@stacks/connect-ui/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","auth.js","components/fetch.js","components/Signin.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","appConfig","AppConfig","userSession","UserSession","getUserData","loadUserData","owner_details","stxAddress","o_user_id","o_first_name","o_last_name","o_email","a","axios","get","res","i","data","length","JSON","stringify","first_name","last_name","email","localStorage","setItem","myFunction","o_id","getItem","walker_details","w_user_id","w_first_name","w_last_name","w_email","w_id","console","log","Signin","className","href","type","onClick","showConnect","appDetails","name","icon","window","location","origin","redirectTo","onFinish","reload","Signout","profile","mainnet","str_stxAddress","shortenedStxAddress","substr","signUserOut","App","state","userData","preventDefault","this","setState","isSignInPending","handlePendingSignIn","history","replaceState","document","title","isUserSignedIn","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e664eb7.chunk.js","sourcesContent":["var map = {\n\t\"./connect-modal.entry.js\": [\n\t\t525,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 500;\nmodule.exports = webpackAsyncContext;","// Primary dependencies\nimport { AppConfig, UserSession, showConnect } from '@stacks/connect';\nimport { Person } from '@stacks/profile';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\n\nexport const userSession = new UserSession({ appConfig });\n\n// Authentication modal displays (Hiro Web Wallet - Browser Extension)\nexport function authenticate() {\n  showConnect({\n    appDetails: {\n      name: 'Test',\n      icon: window.location.origin + './assets/puppy.png',\n    },\n    redirectTo: '/',\n    onFinish: () => {\n      window.location.reload();\n    },\n    userSession: userSession,\n  });\n}\n\n// Get user data\nexport function getUserData() {\n  return userSession.loadUserData();\n}\n\n// Identify the profile\nexport function getPerson() {\n  return new Person(getUserData().profile);\n}\n\n// Disconnect from the userSession\nexport function disconnect() {\n  userSession.signUserOut(window.location.origin);\n  \n}\n","// Primary dependency\nimport axios from 'axios';\n\n// Export owner details: id, first_name, last_name, and email\nexport const owner_details = (stxAddress) => {\n    let o_user_id;\n    let o_first_name;\n    let o_last_name;\n    let o_email;\n\n    // Read data from the Heroku DB /ap/owners\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/owners`);\n          //   const body = await res.json(); // NOTE TO SELF: could this be used?\n\n        // Loop through all of the data\n        for (let i = 0; i < res.data.length; i++) {\n\n            // If an owner_id matches the stxAddress that you attempted to log in with then store the OWNER data locally.\n            // This data was stored locally so that it could be pulled out of the async function.\n            if (JSON.stringify(res.data[i].id) === stxAddress) {\n                o_user_id = res.data[i].id;\n                o_first_name = res.data[i].first_name;\n                o_last_name = res.data[i].last_name;\n                o_email = res.data[i].email;\n                localStorage.setItem('o_user_id', o_user_id);\n                localStorage.setItem('o_first_name', o_first_name);\n                localStorage.setItem('o_last_name', o_last_name);\n                localStorage.setItem('o_email', o_email);\n            }\n        }\n    }\n    // [NEED]Catch error?\n\n    // Call the async function and grab the data\n    myFunction();\n    let o_local_user_id = localStorage.getItem('o_user_id');\n    let o_local_first_name = localStorage.getItem('o_first_name');\n    let o_local_last_name = localStorage.getItem('o_last_name');\n    let o_local_email = localStorage.getItem('o_email');\n\n    // Return the data\n    return {\n        o_id: o_local_user_id,\n        o_first_name: o_local_first_name,\n        o_last_name: o_local_last_name,\n        o_email: o_local_email,\n    }\n}\n\nexport const walker_details = (stxAddress) => {\n    let w_user_id;\n    let w_first_name;\n    let w_last_name;\n    let w_email;\n\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/walkers`);\n        // Loop through the Walkers DB\n        for (let i = 0; i < res.data.length; i++) {\n            // If a walker_id matches the stxAddress then store that WALKER data locally\n            if (JSON.stringify(res.data[i].id) === stxAddress) {\n                w_user_id = res.data[i].id;\n                w_first_name = res.data[i].first_name;\n                w_last_name = res.data[i].last_name;\n                w_email = res.data[i].email;\n                localStorage.setItem('w_user_id', w_user_id);\n                localStorage.setItem('w_first_name', w_first_name);\n                localStorage.setItem('w_last_name', w_last_name);\n                localStorage.setItem('w_email', w_email);\n            }\n        }\n    }\n    myFunction();\n    let w_local_user_id = localStorage.getItem('w_user_id');\n    let w_local_first_name = localStorage.getItem('w_first_name');\n    let w_local_last_name = localStorage.getItem('w_last_name');\n    let w_local_email = localStorage.getItem('w_email');\n\n    return {\n        w_id: w_local_user_id,\n        w_first_name: w_local_first_name,\n        w_last_name: w_local_last_name,\n        w_email: w_local_email,\n    }\n}\nexport const job_details = (stxAddress) => {\n    let j_id;\n    let j_pay;\n    let j_check_in;\n    let j_walk;\n    let j_timeframe;\n    let j_location;\n    let j_completed;\n    let j_owner_id;\n    let j_walker_id;\n    let j_animal_id;\n    let j_pet_name;\n    let j_owner_first_name;\n    let j_owner_last_name;\n\n    async function myFunction() {\n        const res = await axios.get(`https://pacific-depths-79804.herokuapp.com/api/jobs`);\n        // Loop through the Jobs DB\n        for (let i = 0; i < res.data.length; i++) {\n            // If an owner_id matches the stxAddress then store that JOB data locally\n            if (JSON.stringify(res.data[i].owner_id) === stxAddress) {\n                console.log(\"JOB #: \", i)\n                j_id = res.data[i].id;\n                j_pay = res.data[i].pay;\n                j_check_in = res.data[i].check_in;\n                j_walk = res.data[i].walk;\n                j_timeframe = res.data[i].timeframe;\n                j_location = res.data[i].location;\n                j_completed = res.data[i].completed;\n                j_owner_id = res.data[i].owner_id;\n                j_walker_id = res.data[i].walker_id;\n                j_animal_id = res.data[i].animal_id;\n                j_pet_name = res.data[i].pet.pet_name;\n                j_owner_first_name = res.data[i].owner.first_name;\n                j_owner_last_name = res.data[i].owner.last_name;\n\n                localStorage.setItem('j_id', j_id);\n                localStorage.setItem('j_pay', j_pay);\n                localStorage.setItem('j_check_in', j_check_in);\n                localStorage.setItem('j_walk', j_walk);\n                localStorage.setItem('j_timeframe', j_timeframe);\n                localStorage.setItem('j_location',  j_location);\n                localStorage.setItem('j_completed', j_completed);\n                localStorage.setItem('j_owner_id', j_owner_id);\n                localStorage.setItem('j_walker_id', j_walker_id);\n                localStorage.setItem('j_animal_id', j_animal_id);\n                localStorage.setItem('j_pet_name', j_pet_name);\n                localStorage.setItem('j_owner_first_name', j_owner_first_name);\n                localStorage.setItem('j_owner_last_name', j_owner_last_name);\n            }\n        }\n    }\n    myFunction();\n    let j_local_id = localStorage.getItem('j_id');\n    let j_local_pay = localStorage.getItem('j_pay');\n    let j_local_check_in = localStorage.getItem('j_check_in');\n    let j_local_walk = localStorage.getItem('j_walk');\n    let j_local_timeframe = localStorage.getItem('j_timeframe');\n    let j_local_location = localStorage.getItem('j_location');\n    let j_local_completed = localStorage.getItem('j_completed');\n    let j_local_owner_id = localStorage.getItem('j_owner_id');\n    let j_local_walker_id = localStorage.getItem('j_walker_id');\n    let j_local_animal_id = localStorage.getItem('j_animal_id');\n    let j_local_pet_name = localStorage.getItem('j_pet_name');\n    let j_local_owner_first_name = localStorage.getItem('j_owner_first_name');\n    let j_local_owner_last_name = localStorage.getItem('j_owner_last_name');\n\n    return {\n        j_id: j_local_id,\n        j_pay: j_local_pay,\n        j_check_in: j_local_check_in,\n        j_walk: j_local_walk,\n        j_timefrime: j_local_timeframe,\n        j_location: j_local_location,\n        j_completed: j_local_completed,\n        j_owner_id: j_local_owner_id,\n        j_walker_id: j_local_walker_id,\n        j_animal_id: j_local_animal_id,\n        j_pet_name: j_local_pet_name,\n        j_owner_first_name: j_local_owner_first_name,\n        j_owner_last_name: j_local_owner_last_name,\n    }\n}","import React from 'react';\nimport { authenticate, disconnect } from '../auth';\n// import { Text } from '@blockstack/ui';\nimport { getUserData } from '../auth';\n\n// Main handlebars HTML template. This is a necessity and it handles page formatting. \n// import { Main } from './handlebars/main';\n\n// Various user pages (Owner / Walker). pets-cards, nav-block, and jobs-card are currently \n// contained within each one of these files as needed. It may be more appropriate\n// to create standalone JS files for re-use. The current set up is NOT DRY.\n\n// import { Dashboard } from './handlebars/dashboard';\n// import { Homepage } from './handlebars/homepage';\n// import { Jobsearch } from './handlebars/jobsearch';\n// import { WalkerDash } from './handlebars/walker-dashboard';\n\nimport { owner_details, walker_details } from './fetch';\nconsole.log('owner: ', owner_details().o_id);\nconsole.log('walker: ', walker_details().w_id);\n\n// Signin function. Based on the App.jsx --> render() terenary operator this\n// is the truthy value and exports on the Homepage. Once the user is logged in, \n// then Signout() exports.\nexport const Signin = () => {\n  console.log(\"Sign in\");\n  return (\n    <div>\n      <div>\n        <div className=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n            <a className=\"navbar-brand\" href=\"/\">Scout</a>\n            <ul className=\"nav navbar-nav ml-auto\"></ul>\n          <button type=\"button\" className=\"btn success\" onClick={() => authenticate()}>Login</button>\n        </div>\n      </div>\n      {/* Render Main handlebars HTML and Homepage handlebars HTML pages. */}\n      {/* <Main />\n      <Homepage /> */}\n      <h1>MAIN PAGE</h1>\n    </div>\n  );\n};\n\n// Signout function. Based on the App.jsx --> render() terenary operator this\n// is the falsy value and exports once the user logs in. Once the user is logged in, \n// then Signout() exports.\nexport const Signout = () => {\n  console.log(\"Sign out\");\n  const stxAddress = getUserData().profile.stxAddress.mainnet;\n  const str_stxAddress = JSON.stringify(stxAddress);\n  console.log(str_stxAddress);\n  const shortenedStxAddress = stxAddress.substr(0, 4) + \"....\" + stxAddress.substr(stxAddress.length-4, stxAddress.length);\n  return (\n    <div>\n      <div>\n        <div className=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n          <a className=\"navbar-brand\" href=\"/\">Scout</a>\n          <ul className=\"nav navbar-nav ml-auto\"></ul>\n          <h6 className=\"address-color\">{shortenedStxAddress} </h6>\n          <button type=\"button\" className=\"btn success\" onClick={() => disconnect()}>Logout</button>\n        </div>\n      </div>\n      {/* Render the Main handlebars HTML page. */}\n      {/* <Main />  */}\n      <h1>MAIN PAGE</h1>\n      {/* The following terenary operators will execute in sequence. */}\n      {/* If you find the key in the Owners Table then render the Owner Dashboard.  */}\n      {stxAddress === owner_details(str_stxAddress).o_id ? <h1>OWNER DASH</h1> : console.log(\"This account is not registered as an Owner.\")}\n      {/* If you find the key in the Walker Table then render the Walker Dashboard.  */}\n      {stxAddress === walker_details(str_stxAddress).w_id ? <h1>WALKER DASH</h1> : console.log(\"This account is not registered as a Walker.\")}\n    </div>\n    \n  );\n};","// Primary dependencies\nimport React, { Component } from 'react';\nimport { Signin, Signout } from './Signin';\nimport { userSession } from '../auth';\n\n// Export the 'App' class to /src/index.js\nexport default class App extends Component {\n  state = {\n    userData: null,\n  };\n\n  handleSignOut(e) {\n    e.preventDefault();\n    this.setState({ userData: null });\n    userSession.signUserOut(window.location.origin);\n  }\n\n  componentDidMount() {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(userData => {\n        window.history.replaceState({}, document.title, '/');\n        this.setState({ userData: userData });\n      });\n    } else if (userSession.isUserSignedIn()) {\n      this.setState({ userData: userSession.loadUserData() });\n    }\n  }\n\n  // Render the Login or Logout button depending on the user session i.e. is the user signed in or not?\n  render() {\n    return (\n      <div>\n          {!userSession.isUserSignedIn() ? <Signin /> : <Signout/>}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}